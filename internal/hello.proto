syntax = "proto3";

package hello;

option go_package = "/example";

import "api.proto";
import "openapi/annotations.proto";

option (openapi.document) = {
   info: {
      title: "example swagger doc";
      version: "Version from annotation";
   }
};

message FormReq {
   option (openapi.schema) = {
      title: "Hello - request";
      description: "Hello - request";
      required: [
         "form1"
      ];
   };

   string FormValue = 1 [
      (api.form) = "form1",
      (openapi.property) = {
         title: "this is an override field schema title";
         max_length: 255;
      }
   ];
}

message QueryReq {
   repeated string items = 1 [(api.query) = "items"];
   //QueryValue描述
   string QueryValue = 2 [
      (api.query) = "query2",
      (openapi.property) = {
         title: "Name";
         description: "Name";
         type: "string";
         min_length: 1;
         max_length: 50;
      }
   ];
}

message PathReq {
   //field: path描述
   string PathValue = 1 [(api.path) = "path1"];
}

message BodyReq {
   //field: body描述
   string BodyValue = 1 [(api.body) = "body"];
   //field: query描述
   string QueryValue = 2 [(api.query) = "query2"];
   //field: body1描述
   string Body1Value = 3 [(api.body) = "body1"];
}

message HelloReq {

   string Name = 1[
      (api.query) = "name",
      (openapi.property) = {
         title: "Name";
         description: "Name";
         type: "string";
         min_length: 1;
         max_length: 50;
      }
   ];
}

// HelloResp描述
message HelloResp {
   option (openapi.schema) = {
      title: "Hello - response";
      description: "Hello - response";
      required: [
         "body"
      ];
   };

   //RespBody描述
   string RespBody = 1[
      (api.body) = "body",
      (openapi.property) = {
         title: "response content";
         description: "response content";
         type: "string";
         min_length: 1;
         max_length: 80;
      }
   ];
}

//HelloService1描述
service HelloService1 {
   option (api.base_domain) = "http://localhost:8888";
   rpc QueryMethod1(QueryReq) returns (HelloResp) {
      option (api.get) = "/hello";
   }

   rpc FormMethod(FormReq) returns (HelloResp) {
      option (api.post) = "/form";
   }

   rpc PathMethod(PathReq) returns (HelloResp) {
      option (api.get) = "/path:path1";
   }

   rpc BodyMethod(BodyReq) returns (HelloResp) {
      option (api.post) = "/body";
   }

}